openapi: "3.0.3"
info:
  title: API для работы с командами FIAS
  version: "1.0"
  description: |
    Описывает взаимодействие УШ РТК с SoftWLC для создания УЗ Wi-Fi по командам FIAS

  contact:
    name: Mikhail Gaydamaka
    url: https://eltex-co.ru/
    email: mikhail.gaydamaka@eltex-co.ru

components:
  securitySchemes:
    BasicAuthentication:
      type: http
      scheme: basic
      description: Все равно работать будет в контуре ЦОД РТК

  schemas:
    HotelID:
      type: string
      maxLength: 20
      description: Hotel ID в УШ
      nullable: false

    RoomNumber:
      type: string
      maxLength: 10
      description: Номер комнаты, FIAS RN, может содержать любые печатные символы
      nullable: false

    GuestName:
      type: string
      maxLength: 40
      description: Фамилия гостя, FIAS GN
      nullable: false

    GuestFirstName:
      type: string
      maxLength: 40
      description: Имя гостя, FIAS FN
      nullable: false

    GuestTitle:
      type: string
      maxLength: 10
      description: Титул гостя (Мистер, Миссис и т.п.)
      nullable: true

    PmsRegNum:
      type: string
      maxLength: 20
      description: |
        Уникальный номер гостя.
      nullable: false

    ArrivalDate:
      type: string
      maxLength: 19
      description: |
        Дата чек-ина. Формат (YYYY-MM-DD HH:MM:SS).
        Часовой пояс платформы.
        По умолчанию - Дата и время вызова метода.
      example: 2021-11-08 13:00:01
      nullable: true

    DepartureDate:
      type: string
      maxLength: 19
      description: |
        Дата чек-аута. Формат (YYYY-MM-DD HH:MM:SS).
        Часовой пояс платформы.
      example: 2021-11-08 13:00:01
      nullable: true

    ArrivalDateTS:
      type: string
      maxLength: 19
      description: |
        Дата чек-ина. Формат (YYYY-MM-DD HH:MM:SS).
        Часовой пояс PMS.
        По умолчанию - Дата и время вызова метода.
      example: 2021-11-08 13:00:01
      nullable: true

    DepartureDateTS:
      type: string
      maxLength: 19
      description: |
        Дата чек-аута. Формат (YYYY-MM-DD HH:MM:SS).
        Часовой пояс PMS.
      example: 2021-11-08 13:00:01
      nullable: true

    DateTime:
      type: string
      maxLength: 19
      description: |
        "YYYY-MM-DD HH:MM:SS"
        Дата, переданная в запросе от FIAS
        Используется для поиска соответствий между запросами в разных ИС
      example: 2021-11-08 13:00:01
      nullable: true

    GuestLanguage:
      type: string
      maxLength: 2
      description: |
        Язык интерфейса ТВ
        Формат ISO 639-1, по умолчанию en
      example: en
      nullable: true

    GuestVipStatus:
      type: string
      maxLength: 20
      description: |
        Статус VIP постояльца ANSII 37..127
        Добавили на будущее, в первой версии не обрабатывается
      nullable: true

    RoomShare:
      type: string
      maxLength: 1
      description: |
        Признак количества постояльцев в гостинице.
        N – один постоялец в комнате,
        Y – более одного постояльца в комнате
      enum: [
        "N",
        "Y"
      ]
      nullable: true

    NoPost:
      type: integer
      format: int
      enum: [
        0,
        1
      ]
      description: |
        1, если запрещены начисления
        Добавили на будущее, в первой версии не обрабатывается
      nullable: true

    SwapFlag:
      type: string
      maxLength: 1
      enum: [
          "N",
          "Y"
      ]
      description: |
        Признак, что данная запись направлена в рамках процесса синхронизации базы данных с PMS.
        Y – запись синхронизационная в рамках процесса синхронизации БД (Database Resync)
        N (или отсутствует значение) – Запись онлайн
        FIAS SF
      nullable: true

    ProfileNum:
      type: string
      maxLength: 10
      description: Номер профиля
      example: 1
      nullable: true

    Login:
      type: string
      maxLength: 64
      description: Внутренний логин
      nullable: true

    TariffCode:
      type: string
      maxLength: 64
      description: Уникальный код тарифа в SoftWLC
      nullable: false

    TariffPrice:
      type: integer
      format: int32
      description: |
        Цена тарифа в SoftWLC
        Передается из SoftWLC, чтобы Ted не нужно было работать
        со структурой тарифа, измеряется в российских копейках
      nullable: false

    Domain:
      type: string
      maxLength: 235
      description: Домен гостя (он же Домен SSID)
      nullable: false

    Code:
      type: integer
      format: int32
      description: Код ошибки или успех (0)
      example: 0
      nullable: false

    Message:
      type: string
      description: Пояснение к ошибке
      example: В БД не найден Hotel ID
      nullable: true

    Messages:
      type: array
      description: Пояснения к ошибке
      items:
        type: string

    Status:
      type: integer
      format: int32
      description: Статус продажи:\ |
        0 – успех; |
        1 – покупка отклонена, т.к. превышен кредитный лимит; |
        2 – ошибка. Общая сумма покупки не совпадает с суммами деталей покупки; |
        3 – покупка отклонена для постояльца (установлен флаг NoPost ля постояльца); |
        4 – повторная покупка; |
        9 – Ошибка |
      example: 0
      nullable: false

    PosId:
      type: string
      maxLength: 16
      description: Идентификатор точки продажи
      nullable: false

    CheckNum:
      type: integer
      format: int32
      maxLength: 10
      description: Номер чека
      nullable: false

    Text:
      type: string
      maxLength: 255
      description: Текст ответа покупки
      nullable: true

    UserID:
      type: string
      maxLength: 16
      description: Идентификатор пользователя
      nullable: true

    SalesOutlet:
      type: integer
      format: int32
      maxLength: 5
      description: Номер торговой точки
      nullable: true

    PostingSequenceNum:
      type: integer
      format: int32
      maxLength: 8
      description: Уникальный идентификатор покупки в УШ
      nullable: true

    CheckInRequest:
      type: object
      properties:
        hotelId:
          $ref: '#/components/schemas/HotelID'
        roomNumber:
          $ref: '#/components/schemas/RoomNumber'
        guestName:
          $ref: '#/components/schemas/GuestName'
        guestFirstName:
          $ref: '#/components/schemas/GuestFirstName'
        guestTitle:
          $ref: '#/components/schemas/GuestTitle'
        pmsRegNum:
          $ref: '#/components/schemas/PmsRegNum'
        arrivalDate:
          $ref: '#/components/schemas/ArrivalDate'
        departureDate:
          $ref: '#/components/schemas/DepartureDate'
        arrivalDateTS:
          $ref: '#/components/schemas/ArrivalDateTS'
        departureDateTS:
          $ref: '#/components/schemas/DepartureDateTS'
        dateTime:
          $ref: '#/components/schemas/DateTime'
        guestLanguage:
          $ref: '#/components/schemas/GuestLanguage'
        guestVipStatus:
          $ref: '#/components/schemas/GuestVipStatus'
        roomShare:
          $ref: '#/components/schemas/RoomShare'
        swapFlag:
          $ref: '#/components/schemas/SwapFlag'
        noPost:
          $ref: '#/components/schemas/NoPost'
        profileNum:
          $ref: '#/components/schemas/ProfileNum'

    CheckOutRequest:
      type: object
      properties:
        hotelId:
          $ref: '#/components/schemas/HotelID'
        roomNumber:
          $ref: '#/components/schemas/RoomNumber'
        pmsRegNum:
          $ref: '#/components/schemas/PmsRegNum'
        roomShare:
          $ref: '#/components/schemas/RoomShare'
        swapFlag:
          $ref: '#/components/schemas/SwapFlag'
        dateTime:
          $ref: '#/components/schemas/DateTime'

    GuestChangeRequest:
      type: object
      properties:
        hotelId:
          $ref: '#/components/schemas/HotelID'
        roomNumber:
          $ref: '#/components/schemas/RoomNumber'
        roomShare:
          $ref: '#/components/schemas/RoomShare'
        oldRoom:
          $ref: '#/components/schemas/RoomNumber'
        oldRoomShare:
          $ref: '#/components/schemas/RoomShare'
        guestName:
          $ref: '#/components/schemas/GuestName'
        guestFirstName:
          $ref: '#/components/schemas/GuestFirstName'
        guestTitle:
          $ref: '#/components/schemas/GuestTitle'
        pmsRegNum:
          $ref: '#/components/schemas/PmsRegNum'
        arrivalDate:
          $ref: '#/components/schemas/ArrivalDate'
        departureDate:
          $ref: '#/components/schemas/DepartureDate'
        arrivalDateTS:
          $ref: '#/components/schemas/ArrivalDateTS'
        departureDateTS:
          $ref: '#/components/schemas/DepartureDateTS'
        dateTime:
          $ref: '#/components/schemas/DateTime'
        guestLanguage:
          $ref: '#/components/schemas/GuestLanguage'
        guestVipStatus:
          $ref: '#/components/schemas/GuestVipStatus'
        profileNum:
          $ref: '#/components/schemas/ProfileNum'
        noPost:
          $ref: '#/components/schemas/NoPost'

    GuestChargeRequest:
      type: object
      properties:
        roomNumber:
          $ref: '#/components/schemas/RoomNumber'
        guestName:
          $ref: '#/components/schemas/GuestName'
        domain:
          $ref: '#/components/schemas/Domain'
        tariffCode:
          $ref: '#/components/schemas/TariffCode'
        tariffPrice:
          $ref: '#/components/schemas/TariffPrice'
        dateTime:
          $ref: '#/components/schemas/DateTime'

    SearchRequest:
      type: object
      properties:
        roomNumber:
          $ref: '#/components/schemas/RoomNumber'
        guestName:
          $ref: '#/components/schemas/GuestName'
        domain:
          $ref: '#/components/schemas/Domain'
        dateTime:
          $ref: '#/components/schemas/DateTime'

    CheckInResponse:
      type: object
      description: Формат ответа Check-In для УШ РТК
      properties:
        code:
          $ref: '#/components/schemas/Code'
        messages:
          $ref: '#/components/schemas/Messages'

    CheckOutResponse:
      type: object
      description: Формат ответа Check-Out для УШ РТК
      properties:
        code:
          $ref: '#/components/schemas/Code'

    GuestChangeResponse:
      type: object
      description: Формат ответа Guest Change для УШ РТК
      properties:
        code:
          $ref: '#/components/schemas/Code'

    GuestChargeResponse:
      type: object
      description: Формат ответа Guest Charge для SoftWLC
      properties:
        swCode:
          $ref: '#/components/schemas/Code'
        swMessage:
          $ref: '#/components/schemas/Message'
        code:
          $ref: '#/components/schemas/Code'

    SearchResponse:
      type: object
      description: Формат ответа Search для SoftWLC
      properties:
        swCode:
          $ref: '#/components/schemas/Code'
        swMessage:
          $ref: '#/components/schemas/Message'
        login:
          $ref: '#/components/schemas/Login'

    SaledoneRequest:
      type: object
      description: Формат запроса saledone для SoftWLC (В текущей реализации только логируется)
      properties:
        hotelId:
          $ref: '#/components/schemas/HotelID'
        roomNumber:
          $ref: '#/components/schemas/RoomNumber'
        status:
          $ref: '#/components/schemas/Status'
        pmsRegNum:
          $ref: '#/components/schemas/PmsRegNum'
        posId:
          $ref: '#/components/schemas/PosId'
        dateTime:
          $ref: '#/components/schemas/DateTime'
        dateTimeTS:
          $ref: '#/components/schemas/DateTime'
        checkNum:
          $ref: '#/components/schemas/CheckNum'
        text:
          $ref: '#/components/schemas/Text'
        userID:
          $ref: '#/components/schemas/UserID'
        salesOutlet:
          $ref: '#/components/schemas/SalesOutlet'
        postingSequenceNum:
          $ref: '#/components/schemas/PostingSequenceNum'

    SaledoneResponse:
      type: object
      description: Формат ответа saledone для УШ РТК
      properties:
        code:
          $ref: '#/components/schemas/Code'

security:
  - BasicAuthentication: []

tags:
  - name: gateway
    description: API для УШ РТК (работа с УЗ Wi-Fi)
  - name: softwlc
    description: API для SoftWLC CaptivePortal (работа с начислениями)

paths:
  /checkin:
    post:
      tags:
        - gateway
      summary: |
        От PMS приходит нотификация при заселении постояльца в номер гостиницы
        В SoftWLC создается УЗ Wi-Fi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckInRequest'
        required: true

      responses:
        200:
          description: |
            Запрос обработан.
            Если УЗ создана, придет 0 в Response
            Если нет - поясним почему
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckInResponse'
        403:
          description: Доступ запрещён.
        500:
          description: Внутренняя ошибка.
          content:
            text/html:
              example: Что-то пошло не так.

  /checkout:
    post:
      tags:
        - gateway
      summary: |
        От PMS приходит нотификация при выселении постояльца из номера гостиницы
        В SoftWLC происходит блокировка УЗ Wi-Fi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckOutRequest'
        required: true

      responses:
        200:
          description: |
            Запрос обработан.
            Если УЗ заблокирована, придет 0 в Response
            Если нет - поясним почему
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckOutResponse'
        403:
          description: Доступ запрещён.
        500:
          description: Внутренняя ошибка.
          content:
            text/html:
              example: Что-то пошло не так.

  /guestchange:
    post:
      tags:
        - gateway
      summary: |
        От PMS приходит нотификация при переселении постояльца
        В SoftWLC происходит обновление УЗ Wi-Fi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestChangeRequest'
        required: true

      responses:
        200:
          description: |
            Запрос обработан.
            Если УЗ обновлена, придет 0 в Response
            Если нет - поясним почему
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestChangeRequest'
        403:
          description: Доступ запрещён.
        500:
          description: Внутренняя ошибка.
          content:
            text/html:
              example: Что-то пошло не так.

  /saledone:
    post:
      tags:
        - gateway
      summary: |
        От УШ приходит уведомление на запрос /charge.
        Содержит информацию о проведенной покупке.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaledoneRequest'
        required: true

      responses:
        200:
          description: |
            Запрос залогирован. В ответе будет отправлен 0.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaledoneResponse'
        403:
          description: Доступ запрещён.
        500:
          description: Внутренняя ошибка.
          content:
            text/html:
              example: Что-то пошло не так.

  /charge:
    post:
      tags:
        - softwlc
      summary: |
        От SoftWLC приходит нотификация о выборе профиля
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestChargeRequest'
        required: true

      responses:
        200:
          description: |
            Запрос обработан информация передана в УШ
            Если успешно, придет 0 в Response
            Если нет - поясним почему
            В gwCode укажем код ответа УШ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestChargeResponse'
        403:
          description: Доступ запрещён.
        500:
          description: Внутренняя ошибка.
          content:
            text/html:
              example: Что-то пошло не так.

  /search:
    get:
      tags:
        - softwlc
      summary: |
        От SoftWLC приходит Фамилия, Номер комнаты, Домен
        Надо найти пользователя (вернуть логин в БД)
      parameters:
        - name: user
          in: query
          description: Информация о пользователе
          required: true
          schema:
            $ref: '#/components/schemas/SearchRequest'
      responses:
        200:
          description: |
            Пользователь по параметрам найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        403:
          description: Доступ запрещён.
        500:
          description: Внутренняя ошибка.
          content:
            text/html:
              example: Что-то пошло не так.

  /getversion:
    get:
      tags:
        - softwlc
      summary: |
        Служебное API для контроля доступности.
        Просто показывает версию сборки.
      responses:
        200:
          description: Успех
          content:
            text/html:
              example: 1.21-682
        500:
          description: Внутренняя ошибка.
          content:
            text/html:
              example: Что-то пошло не так.
