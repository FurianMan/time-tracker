openapi: 3.0.3
info:
  title: Многопользовательский time-tracker
  description: Документация на API
  contact:
    email: rihtervladislav6@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:6969/time-tracker/
tags:
  - name: version
    description: Получение версии
  - name: user
    description: Управление пользователями
  - name: user/work
    description: Трекинг работы
  - name: user/work/stats
    description: Получение статистики по пользователю
paths:
  # /version:
  #   get:
  #     description: 'Получение версии приложения'
  #     parameters: []
  #     responses:
  #       '200':
  #         description: OK
  /user:
    get:
      tags:
        - "user"
      description: 'Получение информации о пользователе'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/UserFullReq'
                - $ref: '#/components/schemas/UserShortReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFullRes'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: "Inappropriate json field value: 1997.08.01"       
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cannot execute query `getUser` to database"
    post:
      tags:
        - "user"
      description: 'Создание пользователей'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFullReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserShortReq'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: "One or more required fields are empty in POST query, check fields: name, surname, birthday, position"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cannot execute query `insertUser` in database"
    put:
      tags:
        - "user"
      description: 'Изменение информации о пользователе'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/UserFullPutReq'
                - $ref: '#/components/schemas/UserShortPutReq'
      responses:
        '200':
          description: OK
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: "One or more required fields are empty in PUT query, check fields: name, surname, birthday, position, user_id"       
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Can't execute query `updateUser` to database"
    delete:
      tags:
        - "user"
      description: 'Удаление пользователя и всей информации о нем'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/UserFullReq'
                - $ref: '#/components/schemas/UserShortReq'
      responses:
        '200':
          description: OK
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: "Request does not have required fields for deleting, please check documentation"       
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cannot execute query `deleteUser` in database"
  /user/work:
    post:
      tags:
        - "user/work"
      description: 'Начать отчет по задаче'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/TaskReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/TaskRes'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: "Request does not have required fields for 'insertTask', check user_id and task_num."       
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cannot execute query `insertTask` in database"
    put:
      tags:
        - "user/work"
      description: 'Закрытие задачи у пользователя'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/TaskPutReq'
      responses:
        '200':
          description: OK
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: "One or more required fields are empty in PUT query, check field: task_id, user_id"       
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cannot execute query `updateTask` to database"
  /user/work/stats:
    get:
      tags:
        - "user/work/stats"
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/StatsReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/StatsOnelineRes'
                  - $ref: '#/components/schemas/StatsPeriodRes'
                  - $ref: '#/components/schemas/StatsSumRes'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: "In request of getting stats user_id must not be equal 0"       
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cannot find in database oneline stats for user_id = 1"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cannot execute query `getWorkStatsOneline` to database"
    delete:
      tags:
        - "user/work/stats"
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/DeleteStatsReq'
      responses:
        '200':
          description: OK
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: "Cannot clear stats from database. user_id must not be equal 0 or be empty"       
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFound'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: "Cannot execute query `clearStats` in database"
components:
  schemas:
    UserFullReq:
      type: object
      required:
        - "name"
        - "surname"
        - "position"
        - "birthday"
      properties:
        name:
          type: string
          example: "Владислав"
        patronymic:
          type: string
          example: "Сергеевич"
        surname:
          type: string
          example: "Рихтер"
        position:
          type: string
          example: "Инженер"
        birthday:
          type: string
          example: "1997-08-01"
    UserShortReq:
      type: object
      required:
        - "user_id"
      properties:
        user_id:
          type: integer
          example: 1
    UserFullRes:
      properties:
        user_id:
          type: integer
          example: 1
        name:
          type: string
          example: "Владислав"
        patronymic:
          type: string
          example: "Сергеевич"
        surname:
          type: string
          example: "Рихтер"
        position:
          type: string
          example: "Инженер"
        birthday:
          type: string
          example: "1997-08-01"
        dateCreating:
          type: string
          example: "2022-08-01 17:51:01"
    UserFullPutReq:
      type: object
      required:
        - "name"
        - "surname"
        - "position"
        - "birthday"
      properties:
        name:
          type: string
          example: "Владислав"
        patronymic:
          type: string
          example: "Сергеевич"
        surname:
          type: string
          example: "Рихтер"
        position:
          type: string
          example: "Инженер"
        birthday:
          type: string
          example: "1997-08-01"
        newName:
          type: string
          example: "Loki"
        newPatronymic:
          type: string
          example: "None"
        newSurname:
          type: string
          example: "Laufeyson"
        newPosition:
          type: string
          example: "God"
        newBirthday:
          type: string
          example: "1997-08-01"
    UserShortPutReq:
      type: object
      required:
        - "user_id"
      properties:
        user_id:
          type: integer
          example: 1
        newName:
          type: string
          example: "Loki"
        newPatronymic:
          type: string
          example: "None"
        newSurname:
          type: string
          example: "Laufeyson"
        newPosition:
          type: string
          example: "God"
        newBirthday:
          type: string
          example: "1997-08-01"
    TaskReq:
      type: object
      required:
        - "user_id"
        - "task_num"
      properties:
        user_id:
          type: integer
          example: 1
        task_num:
          type: integer
          example: 666999
    TaskRes:
      type: object
      required:
        - "task_id"
      properties:
        task_id:
          type: integer
          example: 1
    UserNotFound:
      properties:
        message:
          type: string
          example: "Cannot find the user in database"
    TaskPutReq:
      type: object
      required:
        - "user_id"
        - "task_id"
      properties:
        user_id:
          type: integer
          example: 1
        task_id:
          type: integer
          example: 1
    StatsReq:
      type: object
      required:
        - "user_id"
        - "mode"
        - "start_time"
        - "end_time"
      properties:
        user_id:
          type: integer
          example: 1
        mode:
          type: string
          enum:
            - "oneline"
            - "sum"
            - "period"
          default: oneline
        start_time:
          type: string
          example: "2022-08-01 00:00:00"
        end_time:
          type: string
          example: "2022-08-05 17:30:00"
    StatsOnelineRes:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        timeStatsOneline:
          description: "Время в формате hh:mm (часы:минуты)"
          type: string
          example: 04:53
    StatsSumRes:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        timeStatsSum:
          description: "Время в формате hh:mm (часы:минуты)"
          type: array
          items:
            type: object
            properties:
              time_num:
                type: integer
                example: 666999
              duration:
                type: string
                example: 05:59
    StatsPeriodRes:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        timeStatsPeriod:
          description: "Промежутки, в течение которых сотрудник работал по задаче"
          type: array
          items:
            type: object
            properties:
              time_num:
                type: integer
                example: 666999
              start_time:
                type: string
                example: "2022-08-01 09:31:00"
              end_time:
                type: string
                example: "2022-08-01 11:31:00"
    DeleteStatsReq:
      required:
        - "user_id"
      type: object
      properties:
        user_id:
          type: integer
          example: 1
            


          